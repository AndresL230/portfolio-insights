{"ast":null,"code":"/**\r\n * Portfolio calculation utilities\r\n */\n\nexport const calculateHoldingMetrics = holding => {\n  const marketValue = holding.shares * holding.current_price;\n  const cost = holding.shares * holding.buy_price;\n  const gainLoss = marketValue - cost;\n  const returnPercentage = gainLoss / cost * 100;\n  return {\n    marketValue,\n    cost,\n    gainLoss,\n    returnPercentage\n  };\n};\nexport const calculateAverageHoldingTime = holdings => {\n  if (!holdings || holdings.length === 0) return 'N/A';\n  const avgDays = holdings.reduce((sum, holding) => {\n    const purchaseDate = new Date(holding.purchase_date);\n    const today = new Date();\n    const daysDiff = Math.floor((today - purchaseDate) / (1000 * 60 * 60 * 24));\n    return sum + daysDiff;\n  }, 0) / holdings.length;\n  const months = Math.floor(avgDays / 30);\n  return months > 0 ? `${months} months` : `${Math.floor(avgDays)} days`;\n};\nexport const calculateTotalReturn = holdings => {\n  if (!holdings || holdings.length === 0) return 0;\n  const totalValue = holdings.reduce((sum, h) => sum + h.shares * h.current_price, 0);\n  const totalCost = holdings.reduce((sum, h) => sum + h.shares * h.buy_price, 0);\n  return totalCost > 0 ? ((totalValue - totalCost) / totalCost * 100).toFixed(2) : 0;\n};","map":{"version":3,"names":["calculateHoldingMetrics","holding","marketValue","shares","current_price","cost","buy_price","gainLoss","returnPercentage","calculateAverageHoldingTime","holdings","length","avgDays","reduce","sum","purchaseDate","Date","purchase_date","today","daysDiff","Math","floor","months","calculateTotalReturn","totalValue","h","totalCost","toFixed"],"sources":["C:/Users/andre/OneDrive/Desktop/Projects/portfolio-insights/frontend/src/utils/calculations.js"],"sourcesContent":["/**\r\n * Portfolio calculation utilities\r\n */\r\n\r\nexport const calculateHoldingMetrics = (holding) => {\r\n  const marketValue = holding.shares * holding.current_price;\r\n  const cost = holding.shares * holding.buy_price;\r\n  const gainLoss = marketValue - cost;\r\n  const returnPercentage = (gainLoss / cost) * 100;\r\n  return { marketValue, cost, gainLoss, returnPercentage };\r\n};\r\n\r\nexport const calculateAverageHoldingTime = (holdings) => {\r\n  if (!holdings || holdings.length === 0) return 'N/A';\r\n\r\n  const avgDays = holdings.reduce((sum, holding) => {\r\n    const purchaseDate = new Date(holding.purchase_date);\r\n    const today = new Date();\r\n    const daysDiff = Math.floor((today - purchaseDate) / (1000 * 60 * 60 * 24));\r\n    return sum + daysDiff;\r\n  }, 0) / holdings.length;\r\n\r\n  const months = Math.floor(avgDays / 30);\r\n  return months > 0 ? `${months} months` : `${Math.floor(avgDays)} days`;\r\n};\r\n\r\nexport const calculateTotalReturn = (holdings) => {\r\n  if (!holdings || holdings.length === 0) return 0;\r\n\r\n  const totalValue = holdings.reduce((sum, h) => sum + (h.shares * h.current_price), 0);\r\n  const totalCost = holdings.reduce((sum, h) => sum + (h.shares * h.buy_price), 0);\r\n  return totalCost > 0 ? ((totalValue - totalCost) / totalCost * 100).toFixed(2) : 0;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,MAAMA,uBAAuB,GAAIC,OAAO,IAAK;EAClD,MAAMC,WAAW,GAAGD,OAAO,CAACE,MAAM,GAAGF,OAAO,CAACG,aAAa;EAC1D,MAAMC,IAAI,GAAGJ,OAAO,CAACE,MAAM,GAAGF,OAAO,CAACK,SAAS;EAC/C,MAAMC,QAAQ,GAAGL,WAAW,GAAGG,IAAI;EACnC,MAAMG,gBAAgB,GAAID,QAAQ,GAAGF,IAAI,GAAI,GAAG;EAChD,OAAO;IAAEH,WAAW;IAAEG,IAAI;IAAEE,QAAQ;IAAEC;EAAiB,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAIC,QAAQ,IAAK;EACvD,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;EAEpD,MAAMC,OAAO,GAAGF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEb,OAAO,KAAK;IAChD,MAAMc,YAAY,GAAG,IAAIC,IAAI,CAACf,OAAO,CAACgB,aAAa,CAAC;IACpD,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAAC,CAAC;IACxB,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,KAAK,GAAGH,YAAY,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC3E,OAAOD,GAAG,GAAGK,QAAQ;EACvB,CAAC,EAAE,CAAC,CAAC,GAAGT,QAAQ,CAACC,MAAM;EAEvB,MAAMW,MAAM,GAAGF,IAAI,CAACC,KAAK,CAACT,OAAO,GAAG,EAAE,CAAC;EACvC,OAAOU,MAAM,GAAG,CAAC,GAAG,GAAGA,MAAM,SAAS,GAAG,GAAGF,IAAI,CAACC,KAAK,CAACT,OAAO,CAAC,OAAO;AACxE,CAAC;AAED,OAAO,MAAMW,oBAAoB,GAAIb,QAAQ,IAAK;EAChD,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;EAEhD,MAAMa,UAAU,GAAGd,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEW,CAAC,KAAKX,GAAG,GAAIW,CAAC,CAACtB,MAAM,GAAGsB,CAAC,CAACrB,aAAc,EAAE,CAAC,CAAC;EACrF,MAAMsB,SAAS,GAAGhB,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEW,CAAC,KAAKX,GAAG,GAAIW,CAAC,CAACtB,MAAM,GAAGsB,CAAC,CAACnB,SAAU,EAAE,CAAC,CAAC;EAChF,OAAOoB,SAAS,GAAG,CAAC,GAAG,CAAC,CAACF,UAAU,GAAGE,SAAS,IAAIA,SAAS,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;AACpF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}