{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\Projects\\\\portfolio-insights\\\\frontend\\\\src\\\\components\\\\Charts.js\";\nimport React from 'react';\nimport { LineChart as RechartsLineChart, Line, AreaChart, Area, BarChart as RechartsBarChart, Bar, PieChart as RechartsPieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Interactive Line Chart for Portfolio Value Over Time\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PortfolioLineChart = ({\n  data,\n  title = \"Portfolio Value Over Time\"\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-empty\",\n        children: \"Loading chart data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: data,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"colorValue\",\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"5%\",\n              stopColor: \"#3B82F6\",\n              stopOpacity: 0.8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"95%\",\n              stopColor: \"#3B82F6\",\n              stopOpacity: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e0e0e0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"formatted_date\",\n          stroke: \"#666\",\n          style: {\n            fontSize: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          style: {\n            fontSize: '12px'\n          },\n          tickFormatter: value => `$${value.toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: '#fff',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          formatter: value => [`$${value.toLocaleString()}`, 'Value'],\n          labelStyle: {\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#3B82F6\",\n          fillOpacity: 1,\n          fill: \"url(#colorValue)\",\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n// Interactive Pie Chart for Sector Allocation\n_c = PortfolioLineChart;\nexport const SectorPieChart = ({\n  data,\n  title = \"Sector Allocation\"\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-empty\",\n        children: \"No sector data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n  const COLORS = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#F97316'];\n  const renderCustomLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent\n  }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    if (percent < 0.05) return null; // Don't show label for small slices\n\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: x > cx ? 'start' : 'end',\n      dominantBaseline: \"central\",\n      style: {\n        fontSize: '12px',\n        fontWeight: 'bold'\n      },\n      children: `${(percent * 100).toFixed(0)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(RechartsPieChart, {\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: data,\n          cx: \"50%\",\n          cy: \"50%\",\n          labelLine: false,\n          label: renderCustomLabel,\n          outerRadius: 100,\n          fill: \"#8884d8\",\n          dataKey: \"percentage\",\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: entry.color || COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: (value, name, props) => [`${value.toFixed(2)}% ($${props.payload.value.toLocaleString()})`, props.payload.sector],\n          contentStyle: {\n            backgroundColor: '#fff',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"bottom\",\n          height: 36,\n          formatter: (value, entry) => `${entry.payload.sector}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n// Interactive Bar Chart for Holdings\n_c2 = SectorPieChart;\nexport const HoldingsBarChart = ({\n  data,\n  title = \"Holdings by Value\"\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-empty\",\n        children: \"No holdings data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Transform holdings data for bar chart\n  const chartData = data.map(holding => ({\n    ticker: holding.ticker,\n    value: holding.shares * holding.current_price,\n    shares: holding.shares,\n    price: holding.current_price\n  })).sort((a, b) => b.value - a.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(RechartsBarChart, {\n        data: chartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e0e0e0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"ticker\",\n          stroke: \"#666\",\n          style: {\n            fontSize: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          style: {\n            fontSize: '12px'\n          },\n          tickFormatter: value => `$${(value / 1000).toFixed(0)}k`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: '#fff',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          formatter: (value, name, props) => {\n            if (name === 'value') {\n              return [`$${value.toLocaleString()}`, 'Total Value'];\n            }\n            return [value, name];\n          },\n          labelStyle: {\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"value\",\n          fill: \"#3B82F6\",\n          radius: [8, 8, 0, 0],\n          name: \"Total Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n// Stock History Chart (for individual stocks)\n_c3 = HoldingsBarChart;\nexport const StockHistoryChart = ({\n  data,\n  ticker,\n  title\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title || `${ticker} Price History`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-empty\",\n        children: \"Loading historical data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n  const chartTitle = title || `${ticker} Price History`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: chartTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(RechartsLineChart, {\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e0e0e0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"formatted_date\",\n          stroke: \"#666\",\n          style: {\n            fontSize: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          style: {\n            fontSize: '12px'\n          },\n          tickFormatter: value => `$${value.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: '#fff',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          formatter: (value, name) => {\n            const labels = {\n              'price': 'Close',\n              'open': 'Open',\n              'high': 'High',\n              'low': 'Low'\n            };\n            return [`$${value.toFixed(2)}`, labels[name] || name];\n          },\n          labelStyle: {\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#3B82F6\",\n          strokeWidth: 2,\n          dot: false,\n          name: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n\n// Performance Comparison Bar Chart\n_c4 = StockHistoryChart;\nexport const PerformanceBarChart = ({\n  data,\n  title = \"Stock Performance\"\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-empty\",\n        children: \"No performance data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculate return percentage for each holding\n  const chartData = data.map(holding => {\n    const returnPct = (holding.current_price - holding.buy_price) / holding.buy_price * 100;\n    return {\n      ticker: holding.ticker,\n      return: parseFloat(returnPct.toFixed(2)),\n      gainLoss: holding.shares * (holding.current_price - holding.buy_price)\n    };\n  }).sort((a, b) => b.return - a.return);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(RechartsBarChart, {\n        data: chartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e0e0e0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"ticker\",\n          stroke: \"#666\",\n          style: {\n            fontSize: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          style: {\n            fontSize: '12px'\n          },\n          tickFormatter: value => `${value}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: '#fff',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          formatter: (value, name) => {\n            if (name === 'return') {\n              return [`${value.toFixed(2)}%`, 'Return'];\n            }\n            return [value, name];\n          },\n          labelStyle: {\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"return\",\n          fill: \"#10B981\",\n          radius: [8, 8, 0, 0],\n          name: \"Return %\",\n          children: chartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: entry.return >= 0 ? '#10B981' : '#EF4444'\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_c5 = PerformanceBarChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"PortfolioLineChart\");\n$RefreshReg$(_c2, \"SectorPieChart\");\n$RefreshReg$(_c3, \"HoldingsBarChart\");\n$RefreshReg$(_c4, \"StockHistoryChart\");\n$RefreshReg$(_c5, \"PerformanceBarChart\");","map":{"version":3,"names":["React","LineChart","RechartsLineChart","Line","AreaChart","Area","BarChart","RechartsBarChart","Bar","PieChart","RechartsPieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","PortfolioLineChart","data","title","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","stroke","dataKey","style","fontSize","tickFormatter","value","toLocaleString","contentStyle","backgroundColor","border","borderRadius","formatter","labelStyle","fontWeight","type","fillOpacity","fill","strokeWidth","_c","SectorPieChart","COLORS","renderCustomLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","RADIAN","Math","PI","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","labelLine","label","map","entry","index","color","name","props","payload","sector","verticalAlign","_c2","HoldingsBarChart","chartData","holding","ticker","shares","current_price","price","sort","a","b","_c3","StockHistoryChart","chartTitle","labels","dot","_c4","PerformanceBarChart","returnPct","buy_price","return","parseFloat","gainLoss","_c5","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/Projects/portfolio-insights/frontend/src/components/Charts.js"],"sourcesContent":["import React from 'react';\nimport {\n  LineChart as RechartsLineChart,\n  Line,\n  AreaChart,\n  Area,\n  BarChart as RechartsBarChart,\n  Bar,\n  PieChart as RechartsPieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\n// Interactive Line Chart for Portfolio Value Over Time\nexport const PortfolioLineChart = ({ data, title = \"Portfolio Value Over Time\" }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"chart-container\">\n        <h4>{title}</h4>\n        <div className=\"chart-empty\">Loading chart data...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chart-container\">\n      <h4>{title}</h4>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <AreaChart data={data} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n          <defs>\n            <linearGradient id=\"colorValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#3B82F6\" stopOpacity={0.8}/>\n              <stop offset=\"95%\" stopColor=\"#3B82F6\" stopOpacity={0}/>\n            </linearGradient>\n          </defs>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\n          <XAxis\n            dataKey=\"formatted_date\"\n            stroke=\"#666\"\n            style={{ fontSize: '12px' }}\n          />\n          <YAxis\n            stroke=\"#666\"\n            style={{ fontSize: '12px' }}\n            tickFormatter={(value) => `$${value.toLocaleString()}`}\n          />\n          <Tooltip\n            contentStyle={{\n              backgroundColor: '#fff',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            }}\n            formatter={(value) => [`$${value.toLocaleString()}`, 'Value']}\n            labelStyle={{ fontWeight: 'bold' }}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke=\"#3B82F6\"\n            fillOpacity={1}\n            fill=\"url(#colorValue)\"\n            strokeWidth={2}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\n// Interactive Pie Chart for Sector Allocation\nexport const SectorPieChart = ({ data, title = \"Sector Allocation\" }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"chart-container\">\n        <h4>{title}</h4>\n        <div className=\"chart-empty\">No sector data available</div>\n      </div>\n    );\n  }\n\n  const COLORS = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#F97316'];\n\n  const renderCustomLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    if (percent < 0.05) return null; // Don't show label for small slices\n\n    return (\n      <text\n        x={x}\n        y={y}\n        fill=\"white\"\n        textAnchor={x > cx ? 'start' : 'end'}\n        dominantBaseline=\"central\"\n        style={{ fontSize: '12px', fontWeight: 'bold' }}\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <h4>{title}</h4>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <RechartsPieChart>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            label={renderCustomLabel}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"percentage\"\n          >\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color || COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n          <Tooltip\n            formatter={(value, name, props) => [\n              `${value.toFixed(2)}% ($${props.payload.value.toLocaleString()})`,\n              props.payload.sector\n            ]}\n            contentStyle={{\n              backgroundColor: '#fff',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            }}\n          />\n          <Legend\n            verticalAlign=\"bottom\"\n            height={36}\n            formatter={(value, entry) => `${entry.payload.sector}`}\n          />\n        </RechartsPieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\n// Interactive Bar Chart for Holdings\nexport const HoldingsBarChart = ({ data, title = \"Holdings by Value\" }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"chart-container\">\n        <h4>{title}</h4>\n        <div className=\"chart-empty\">No holdings data available</div>\n      </div>\n    );\n  }\n\n  // Transform holdings data for bar chart\n  const chartData = data.map(holding => ({\n    ticker: holding.ticker,\n    value: holding.shares * holding.current_price,\n    shares: holding.shares,\n    price: holding.current_price\n  })).sort((a, b) => b.value - a.value);\n\n  return (\n    <div className=\"chart-container\">\n      <h4>{title}</h4>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <RechartsBarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\n          <XAxis\n            dataKey=\"ticker\"\n            stroke=\"#666\"\n            style={{ fontSize: '12px' }}\n          />\n          <YAxis\n            stroke=\"#666\"\n            style={{ fontSize: '12px' }}\n            tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`}\n          />\n          <Tooltip\n            contentStyle={{\n              backgroundColor: '#fff',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            }}\n            formatter={(value, name, props) => {\n              if (name === 'value') {\n                return [`$${value.toLocaleString()}`, 'Total Value'];\n              }\n              return [value, name];\n            }}\n            labelStyle={{ fontWeight: 'bold' }}\n          />\n          <Legend />\n          <Bar\n            dataKey=\"value\"\n            fill=\"#3B82F6\"\n            radius={[8, 8, 0, 0]}\n            name=\"Total Value\"\n          />\n        </RechartsBarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\n// Stock History Chart (for individual stocks)\nexport const StockHistoryChart = ({ data, ticker, title }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"chart-container\">\n        <h4>{title || `${ticker} Price History`}</h4>\n        <div className=\"chart-empty\">Loading historical data...</div>\n      </div>\n    );\n  }\n\n  const chartTitle = title || `${ticker} Price History`;\n\n  return (\n    <div className=\"chart-container\">\n      <h4>{chartTitle}</h4>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <RechartsLineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\n          <XAxis\n            dataKey=\"formatted_date\"\n            stroke=\"#666\"\n            style={{ fontSize: '12px' }}\n          />\n          <YAxis\n            stroke=\"#666\"\n            style={{ fontSize: '12px' }}\n            tickFormatter={(value) => `$${value.toFixed(2)}`}\n          />\n          <Tooltip\n            contentStyle={{\n              backgroundColor: '#fff',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            }}\n            formatter={(value, name) => {\n              const labels = {\n                'price': 'Close',\n                'open': 'Open',\n                'high': 'High',\n                'low': 'Low'\n              };\n              return [`$${value.toFixed(2)}`, labels[name] || name];\n            }}\n            labelStyle={{ fontWeight: 'bold' }}\n          />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"price\"\n            stroke=\"#3B82F6\"\n            strokeWidth={2}\n            dot={false}\n            name=\"Close\"\n          />\n        </RechartsLineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\n// Performance Comparison Bar Chart\nexport const PerformanceBarChart = ({ data, title = \"Stock Performance\" }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"chart-container\">\n        <h4>{title}</h4>\n        <div className=\"chart-empty\">No performance data available</div>\n      </div>\n    );\n  }\n\n  // Calculate return percentage for each holding\n  const chartData = data.map(holding => {\n    const returnPct = ((holding.current_price - holding.buy_price) / holding.buy_price) * 100;\n    return {\n      ticker: holding.ticker,\n      return: parseFloat(returnPct.toFixed(2)),\n      gainLoss: holding.shares * (holding.current_price - holding.buy_price)\n    };\n  }).sort((a, b) => b.return - a.return);\n\n  return (\n    <div className=\"chart-container\">\n      <h4>{title}</h4>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <RechartsBarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\n          <XAxis\n            dataKey=\"ticker\"\n            stroke=\"#666\"\n            style={{ fontSize: '12px' }}\n          />\n          <YAxis\n            stroke=\"#666\"\n            style={{ fontSize: '12px' }}\n            tickFormatter={(value) => `${value}%`}\n          />\n          <Tooltip\n            contentStyle={{\n              backgroundColor: '#fff',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            }}\n            formatter={(value, name) => {\n              if (name === 'return') {\n                return [`${value.toFixed(2)}%`, 'Return'];\n              }\n              return [value, name];\n            }}\n            labelStyle={{ fontWeight: 'bold' }}\n          />\n          <Legend />\n          <Bar\n            dataKey=\"return\"\n            fill=\"#10B981\"\n            radius={[8, 8, 0, 0]}\n            name=\"Return %\"\n          >\n            {chartData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.return >= 0 ? '#10B981' : '#EF4444'} />\n            ))}\n          </Bar>\n        </RechartsBarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}